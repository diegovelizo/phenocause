% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wrappers.R
\name{sample_causal_sites.custom}
\alias{sample_causal_sites.custom}
\title{Sample causal genetic variants (custom weights mode)}
\usage{
sample_causal_sites.custom(
  gds_paths,
  n_causal_sites,
  sampling_weights_paths,
  stabilize_sampling_weights = TRUE,
  weights_power = 1,
  missingness_threshold = NULL,
  mac_threshold = NULL,
  n_threads = 1
)
}
\arguments{
\item{gds_paths}{A character vector of paths to the GDS files. When \code{length > 1}, each file is expected to contain data for a single chromosome.}

\item{n_causal_sites}{A single positive integer specifying the total number of causal sites to sample across all GDS files.}

\item{sampling_weights_paths}{A character vector of paths to custom sampling weight files. Files must have a header and contain mandatory columns (case-insensitive): \code{chr}, \code{pos}, and \code{weight}. The columns \code{rsid}, \code{ref}, and \code{alt} are optional; a warning is issued if they are missing.}

\item{stabilize_sampling_weights}{A logical flag. If \code{TRUE} (default), a small constant (10^-6) is added to all weights to prevent zero-probability sampling.}

\item{weights_power}{A numeric value used to raise the sampling weights to a power. Default is 1.}

\item{missingness_threshold}{A numeric value between 0 and 1. Variants with a missingness rate greater than this threshold will be excluded before sampling. Default is \code{NULL}.}

\item{mac_threshold}{A positive integer. Variants with a minor allele count (MAC) less than this threshold will be excluded before sampling. Default is \code{NULL}.}

\item{n_threads}{A positive integer specifying the number of threads for parallel operations on GDS files. Default is 1.}
}
\value{
A list containing two data frames:
\describe{
\item{\code{causal_annotation}}{A data frame with annotations for each of the \code{n_causal_sites} sampled variants.}
\item{\code{causal_genotypes}}{A data frame with \code{n_causal_sites} rows and \code{(k + N)} columns, where \code{k} is the number of annotation columns and \code{N} is the number of samples. It contains the genotypes and annotations for the causal variants.}
}
}
\description{
Samples a specified number of causal variants from a set of GDS files. This function is a wrapper for the \code{custom_weights} mode of \code{sample_causal_sites()}, where variants are sampled using user-provided, custom weights. It can filter sites by missingness or minor allele count (MAC) before sampling and returns the genotypes and annotations of the selected variants.
}
\details{
This function triggers the \code{custom_weights} sampling mode. It robustly handles cases where the number of GDS files and weight files do not match, under the condition that one of the inputs is a single, consolidated file (e.g., one GDS file for all chromosomes, or one weight file for all chromosomes).

The join between weights/annotations and genotypes is performed using a robust composite key (\code{chr}, \code{pos}, \code{ref}, \code{alt}) to ensure correctness.
}
\examples{
\dontrun{
# Ensure required packages and package data are available for the examples
if (!requireNamespace("data.table", quietly = TRUE) ||
    !requireNamespace("SeqArray", quietly = TRUE)) {
  stop("Please install data.table and SeqArray to run these examples.")
}

##================================================================
## Example: Weighted sampling with a custom weights file
##================================================================
cat(">>> Running Example: Custom Weights File\n")
gds_paths <- system.file(
  paste0("extdata/example.chr", 1:3, ".gds"), package = "phenocause"
)

# Create temporary custom weight files
tmp_custom_files <- sapply(1:3, function(chr_idx) {
  tmp_file <- tempfile(fileext = ".tsv")
  gds <- SeqArray::seqOpen(gds_paths[chr_idx])
  on.exit(SeqArray::seqClose(gds))
  custom_weights_df <- data.frame(
    chr = SeqArray::seqGetData(gds, "chromosome"),
    pos = SeqArray::seqGetData(gds, "position"),
    rsid = SeqArray::seqGetData(gds, "annotation/id"),
    ref = SeqArray::seqGetData(gds, "$ref"),
    alt = SeqArray::seqGetData(gds, "$alt"),
    weight = runif(SeqArray::seqSummary(gds)$num.variant, 1, 100)
  )
  data.table::fwrite(custom_weights_df, file = tmp_file, sep = "\t")
  return(tmp_file)
})

n_causal_custom <- 50
custom_sites <- sample_causal_sites.custom(
  gds_paths = gds_paths,
  n_causal_sites = n_causal_custom,
  sampling_weights_paths = tmp_custom_files
)

stopifnot(nrow(custom_sites$causal_genotypes) == n_causal_custom)
cat("OK: Custom weighted sampling returned the correct number of sites.\n")
file.remove(tmp_custom_files)
}
}
\seealso{
\code{\link{sample_causal_sites.uniform}}, \code{\link{sample_causal_sites.ldak}}, \code{\link{sample_causal_sites.collider}}
}
